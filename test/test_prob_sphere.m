close all; clear;clc;add_path()N = [20, 20];s1 = SuperQuadrics({0.05*ones(1,3), [1,1], [0, 0]...    zeros(3,1), [1, 0, 0, 0], N});s2 = SuperQuadrics({0.05*ones(1,3), [1,1], [0, 0]...    0.2*rand(3,1), rand(1,4), N});figure; hold on; axis equal;lightangle(gca,45,30);lighting gouraud;s1.PlotShape('b', 0.4);s2.PlotShape('g', 0.4);m1 = s1.GetGradientsCanonical();[flag, dist, pt_cls, condition] = collision_cfc(s1,s2,'constrained');mink = MinkSumClosedForm(s1,s2,quat2rotm(s1.q),quat2rotm(s2.q));x_mink = mink.GetMinkSumFromGradient(m1)+s1.tc;X = reshape(x_mink(1,:), N(1), N(2)); %change array to matrix formY = reshape(x_mink(2,:), N(1), N(2));Z = reshape(x_mink(3,:), N(1), N(2));surf(X, Y, Z,... 'EdgeColor', 'k', 'EdgeAlpha', 0.2,... 'FaceAlpha', 0.1, 'FaceColor', 'b'); %plot contact space%% Solve max contact probabilitymu = s2.tc;Sigma = 0.001*eye(3);mu_g =  [quat2rotm(s2.q), s2.tc; 0, 0, 0, 1];Sigma_g = 1*eye(6);Sigma_g(4:6,4:6) = 0.001*eye(3);%%[pdf_max_x, x_max] = max_probability_pure_translation(mu, Sigma, s1, s2)scatter3(x_max(1), x_max(2), x_max(3), "ro")%%s2_copy = SuperQuadrics({s2.a, s2.eps, [0, 0]...    s2.tc, s2.q, s2.N});[pdf_max_g, g_max] = max_contact_probability(mu_g, Sigma_g, s1, s2_copy, false);scatter3(g_max(1,4),g_max(2,4),g_max(3,4),"k+")%%v =  4*pi/3*(s1.a(1)+s2.a(1))^3 ;prob_max_x = v * pdf_max_x;pkf_value = pkf_3d_sphere(s1, s2);prob_max_g = pkf_value*pdf_max_g;%%exact_prob_x = exact_contact_probability_pure_translation(mu, Sigma, s1, s2, 10000)exact_prob_g = exact_contact_probability(mu_g, Sigma_g, s1, s2, 10000)%%plot3(x_max(1), x_max(2), x_max(3), "ro")plot3(mu(1), mu(2), mu(3), "k+")%% Plotsfigure; hold on; axis equal;lightangle(gca,45,30);lighting gouraud;s1.PlotShape('b', 0.7);s2.PlotShape('g', 0.7);%%% Sample noisy s2 posesn = 100;xi_rand = mvnrnd(mu, Sigma, n);for i = 1:size(xi_rand, 1)       s2.tc = xi_rand(i,1:3)';    s2.PlotShape('r', 0.2);end