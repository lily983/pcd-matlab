function r1GMM5SG
            S.x = -5:.1:5;
            S.fh = figure('units','normalized',...
            'Position', [0.515 0.025 0.415 1.0],... %%%%
            'name','slider_plot');

            distance = 0.03;
            
            a=[3.9302   40.0000   -1.3492  -19.9206    7.5397];
            b=[22.6667    6.0476    4.3333   30.0000    5.1428];
            
            S.a1 = a(1); S.a2 = a(2);  S.a3 = a(3);  S.a4 = a(4);  S.a5 = a(5); 
            S.b1 = b(1); S.b2 = b(2); S.b3 = b(3); S.b4 = b(4); S.b5 = b(5);

            S.a1Slider = uicontrol('style','slider',...
           'unit','normalized',...
           'position',[0.2 9*distance 0.7 0.01],...
           'min',-20,'max',30,...
           'sliderstep',[0.1, 0.1],...
           'callback', {@gaussianMixtureValue, 'a1'}); 

            S.a2Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 8*distance 0.7 0.01],...
            'min',-20,'max',40,...
            'sliderstep',[0.1, 0.1],...
            'callback', {@gaussianMixtureValue, 'a2'});

            S.a3Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 7*distance 0.7 0.01],...
            'min',-20,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'a3'});

            S.a4Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 6*distance 0.7 0.01],...
            'min',-20,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'a4'});

            S.a5Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 5*distance 0.7 0.01],...
            'min',-20,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'a5'});

            S.b1Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 4*distance 0.7 0.01],...
            'min',0,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'b1'});

            S.b2Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 3*distance 0.7 0.01],...
            'min',0,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'b2'});

            S.b3Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 2*distance 0.7 0.01],...
            'min',0,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'b3'});

            S.b4Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 1*distance 0.7 0.01],...
            'min',0,'max',30,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'b4'});

            S.b5Slider = uicontrol('style','slide',...
            'unit','normalized',...
            'position',[0.2 0.0 0.7 0.01],...
            'min',0,'max',40,...
            'sliderstep',[1, 1],...
            'callback', {@gaussianMixtureValue, 'b5'});

            guidata(S.fh, S);  

end


function gaussianMixtureValue(hSlider, eventData, param)
S = guidata(hSlider); 
if(param == 'a1')
%     disp("a1 value is ")
%     get(hSlider, 'value')
    S.a1 = get(hSlider, 'value');
elseif(param == 'a2')
%     disp("a2 value is ")
%     get(hSlider, 'value')
    S.a2 = get(hSlider, 'value'); 
elseif(param == 'a3')
    S.a3 = get(hSlider, 'value'); 
elseif(param == 'a4')
    S.a4 = get(hSlider, 'value'); 
elseif(param == 'a5')
    S.a5 = get(hSlider, 'value'); 
elseif(param == 'b1')
    S.b1 = get(hSlider, 'value'); 
elseif(param == 'b2')
    S.b2 = get(hSlider, 'value');
elseif(param == 'b3')
    S.b3 = get(hSlider, 'value'); 
elseif(param == 'b4')
    S.b4 = get(hSlider, 'value'); 
elseif(param == 'b5')
    S.b5 = get(hSlider, 'value'); 
end

x = -5:0.01:5;
z = rectangularPulse(-1, 1, x);
w = 1/exp(-0.5) *  exp(-x.^2/2);

e1=2.9436; e2=15.4697;
f1=30.0000; f2=3.6882;
y2 = e1 * exp(-f1 * x.^2/2)/sqrt(2*pi) + e2* exp(-f2 * x.^2/2)/sqrt(2*pi);

c1 = -9.5616; c2 = 7.9123; c3 = 4.4867;
d1 = 7.1483; d2 = 3.4981; d3 = 2.6616;
y3 = c1 * exp(-d1 * x.^2/2)/sqrt(2*pi) + c2 * exp(-d2 * x.^2/2)/sqrt(2*pi) ...
    + c3 * exp(-d3 * x.^2/2)/sqrt(2*pi) ;

j1=-10; j2=-10; j3=20; j4=20;
h1=13.4603; h2=13.4603; h3=6.6984; h4= 4.8889;
y4 = j1 * exp(-h1 * x.^2/2)/sqrt(2*pi) + j2 * exp(-h2 * x.^2/2)/sqrt(2*pi) ...
    + j3 * exp(-h3 * x.^2/2)/sqrt(2*pi) + j4 * exp(-h4 * x.^2/2)/sqrt(2*pi);

y5 = S.a1 * exp(-S.b1 * x.^2/2)/sqrt(2*pi) + S.a2 * exp(-S.b2 * x.^2/2)/sqrt(2*pi) ...
    + S.a3 * exp(-S.b3 * x.^2/2)/sqrt(2*pi) + S.a4 * exp(-S.b4 * x.^2/2)/sqrt(2*pi) + S.a5 * exp(-S.b5 * x.^2/2)/sqrt(2*pi);

plot(x, y5, 'g')
hold on
plot(x, y4, 'r', 'LineStyle', ':')
plot(x, z, 'b')
plot(x, w, 'c')
plot(x, y2, 'b', 'LineStyle', ':')
plot(x, y3, 'm', 'LineStyle', '--')
hold off

disp("a value is ")
[S.a1, S.a2, S.a3 S.a4 S.a5]
disp("b value is ")
[S.b1, S.b2, S.b3 S.b4 S.b5]

guidata(S.fh, S);
end
