% Generate rotationstheta = normrnd(0, 1e-01, [300,1]);R = zeros(2,2,300);for i=1:300    R(:,:,i) = rot2(theta(i));end%% Generate ellipsoidtestNum = 100;axesArray = 0.01 + (0.1 - 0.01) * rand(testNum, 2);axesArray = sort(axesArray, 2, 'descend');%%visualizeRotation(axesArray(2,:), theta);%%d_5_1 = zeros(1, testNum);d_5_2 = zeros(1, testNum);d_5_3 = zeros(1, testNum);for i=1:testNum    obj_i = SuperEllipse([axesArray(i, 1), axesArray(i, 2), 1, 0, 0, 0, 0, 80]);        [~, d_5_1(i)] = idea5in2D(obj_i, R, '1' );       [~, d_5_2(i)] = idea5in2D(obj_i, R, '2' );        [~, d_5_3(i)] = idea5in2D(obj_i, R, '3' );    end%%difference = d_5_1- d_5_2;[max_diff, max_index] = max(difference)[~, mean_index] = min(abs(difference -  mean(difference)))mean_diff  = difference(mean_index)[~, median_index] = min(abs(difference -  median(difference)))median_diff  = difference(median_index)%%figure; hold on % plot(d_5_1, 'g')scatter(1:testNum, d_5_1, 'b')scatter(1:testNum, d_5_2, 'g')scatter(1:testNum, d_5_3, 'r')%%figure; hold on boxplot(difference)ylim([-0.001, 0.03])title('Difference between improvement 2 and improvement 1')%%% visualizeEncapsulatingSurface(axesArray, max_index, R);% visualizeEncapsulatingSurface(axesArray, mean_index, R);visualizeEncapsulatingSurface(axesArray, median_index, R);%%function [obj_mu, obj_maxd]=visualizeEncapsulatingSurface(axesarray, index, R)figure; hold on; axis equalaxes = axesarray(index,:);obj = SuperEllipse([axes(1, 1), axes(1, 2), 1, 0, 0, 0, 0, 80]);[x_new_5_1, d_5_1, d_index_5_1, ~, ~] = idea5in2D(obj, R, '1' );color_5_1 = 'g';alpha_5_1 = 0.3;patch(x_new_5_1(1,:), x_new_5_1(2,:), color_5_1, 'FaceAlpha', alpha_5_1, 'EdgeAlpha', alpha_5_1, 'EdgeColor', color_5_1, 'LineWidth', 1);% % [x_new_5_2, d_5_2, ~, ~, ~] = idea5in2D(obj, R, '2' );% color_5_2 = 'm';% alpha_5_2 = 0.3;% patch(x_new_5_2(1,:), x_new_5_2(2,:), color_5_2, 'FaceAlpha', alpha_5_2, 'EdgeAlpha', alpha_5_2, 'EdgeColor', color_5_2, 'LineWidth', 1);%  [x_new_5_3, ~, ~, d_theta_5_3, theta_max_5_3] = idea5in2D(obj, R, '3' );color_5_3 = hex2rgb('EBBF00'); % yellow% color_5_3 = 'y'; % yellowalpha_5_3 = 0.2;patch(x_new_5_3(1,:), x_new_5_3(2,:), color_5_3,'FaceAlpha', alpha_5_3, 'EdgeAlpha', alpha_5_3, 'EdgeColor', color_5_3, 'LineWidth', 1);obj_mu = SuperEllipse([axes(1, 1), axes(1, 2), 1, 0, 0, 0, 0, 80]);% for 5#1, 5#2, 5#3, the rotation with maximum deviated e1 is the sameobj_maxd = SuperEllipse([axes(1, 1), axes(1, 2), 1, 0, 0, 0, -acos(R(1,1,d_index_5_1)), 80]);obj_mu.PlotShape('b', 0.3, 0.3);obj_maxd.PlotShape('r', 0.4, 0.4);    % plot a*R*e1e1 = [1;0];A = diag(axes);x1 =  R(:,:,d_index_5_1) * e1 ./ norm( A \  R(:,:,d_index_5_1) * e1);y1 = R(:,:,d_index_5_1) * A * e1;n_1 = A^2 \ x1 ./ norm(A^2 \ x1);% t_3 = rot2(theta_max_5_3)*e1;x_3 = rot2(theta_max_5_3)*e1 ./ norm(A \ t_3);y_3 = rot2(theta_max_5_3)*e1 ./ norm(R(:,:,d_index_5_1) / A * R(:,:,d_index_5_1)' * t_3);n_3 = (A^2 \ t_3) ./ norm(A^2 \ t_3);scatter(x1(1), x1(2), 60, color_5_1);scatter(y1(1), y1(2), 60, color_5_1);% normal quiver(x1(1), x1(2), d_5_1 * n_1(1), d_5_1 * n_1(2), 0, 'LineWidth', 2, 'Color', color_5_1, 'MaxHeadSize', 2);quiver(x1(1), x1(2), y1(1)-x1(1), y1(2)-x1(2), 0, 'LineWidth', 2, 'Color', color_5_1, 'LineStyle', ':');% quiver(x1(1), x1(2), d_5_2 * n_1(1), d_5_2 * n_1(2), 0, 'LineWidth', 2, 'Color', color_5_2, 'MaxHeadSize', 2);scatter(x_3(1), x_3(2), 60, color_5_3);scatter(y_3(1), y_3(2), 60, color_5_3);% % normal quiver(x_3(1), x_3(2), d_theta_5_3 * n_3(1), d_theta_5_3 * n_3(2), 0, 'LineWidth', 2,  'Color',color_5_3, 'MaxHeadSize', 2);quiver(x_3(1), x_3(2), y_3(1)-x_3(1), y_3(2)-x_3(2), 0, 'LineWidth', 2, 'Color', color_5_3, 'LineStyle', ':');ax = gca; % Get the current axesax.XAxisLocation = 'origin'; % Set X-axis to pass through the originax.YAxisLocation = 'origin'; % Set Y-axis to pass through the originend%%function visualizeRotation(axes, theta)figure; hold onfor i = 1:size(theta,1)     obj_i = SuperEllipse([axes(1, 1), axes(1, 2), 1, 0, 0, 0, theta(i), 60]);     obj_i.PlotShape('b', 0.01, 0.01)endhold offend